name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  android:
    name: Android (APK & AAB)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Flutter version
        run: flutter --version

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK (release)
        run: flutter build apk --release

      - name: Build AppBundle (release)
        run: flutter build appbundle --release

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/bundle/release/*.aab

  ios:
    name: iOS (no codesign)
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Build iOS (release, no codesign)
        run: flutter build ios --release --no-codesign

      - name: Archive iOS .app
        run: |
          APP_DIR="build/ios/iphoneos"
          APP_PATH=$(ls -d ${APP_DIR}/*.app | head -n 1)
          if [ -z "$APP_PATH" ]; then echo "No .app found in ${APP_DIR}" && ls -la ${APP_DIR} && exit 1; fi
          cd "$(dirname "$APP_PATH")"
          zip -yr ../../ios-release.zip "$(basename "$APP_PATH")"

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios
          path: build/ios-release.zip

  windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop
        shell: pwsh

      - name: Install dependencies
        run: flutter pub get
        shell: pwsh

      - name: Build Windows (release)
        run: flutter build windows --release
        shell: pwsh

      - name: Archive Windows build
        run: |
          $outDir = "build/windows/x64/runner/Release"
          if (-not (Test-Path $outDir)) { Get-ChildItem -Recurse build/windows | Write-Output }
          Compress-Archive -Path "$outDir/*" -DestinationPath "build/windows-release.zip"
        shell: pwsh

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows-release.zip

  macos:
    name: macOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Enable macOS desktop
        run: flutter config --enable-macos-desktop

      - name: Install dependencies
        run: flutter pub get

      - name: Build macOS (release)
        run: flutter build macos --release

      - name: Archive macOS app
        run: |
          OUT_DIR="build/macos/Build/Products/Release"
          APP_PATH=$(ls -d ${OUT_DIR}/*.app | head -n 1)
          if [ -z "$APP_PATH" ]; then echo "No .app found in ${OUT_DIR}" && ls -la ${OUT_DIR} && exit 1; fi
          cd "$(dirname "$APP_PATH")"
          zip -yr ../../../../macos-release.zip "$(basename "$APP_PATH")"

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos
          path: build/macos-release.zip

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [android, ios, macos, windows]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List downloaded files
        run: ls -R dist

      - name: Create Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-alpha') }}
          files: |
            dist/android/*.apk
            dist/android/*.aab
            dist/ios/ios-release.zip
            dist/macos/macos-release.zip
            dist/windows/windows-release.zip
